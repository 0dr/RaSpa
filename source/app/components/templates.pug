- const buttonName = name => name.replace(/ /g, '-');
- const attrName = name => name.replace(/ /g, '_');
- const removeSpace = name => name.replace(/ /g, '');
- const toLowerCase = name => name.toLowerCase();

mixin textInputLabeled(name)
    label(title=`${name}`)&attributes(attributes)=name
        input(name=`attr_${attrName(name)}` placeholder=name title=`@{${attrName(name)}}` type='text' value=``)&attributes(attributes)

mixin hiddenVar(name)
    input(name=`attr_${attrName(name)}` type='hidden')&attributes(attributes)

mixin textInput(name, style="")
    input(name=`attr_${attrName(name)}` placeholder=name title=`@{${attrName(name)}}` type='text' style=style value=``)&attributes(attributes)

mixin numberInput(name)
    input(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='number' value='0' step='1' pattern='^[0-9]')&attributes(attributes)

mixin numberInputLabeled(name)
    label(title=`enter ${name}`)=name
        input(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='number' value='0' min='0' max='99' step='1' pattern='^[0-9]' )&attributes(attributes)

mixin numberInputRollable(name)
    .name
    +rollButton(name)
    input(name=`attr_${attrName(name)}`  type='number' value='0' min='0' max='99' step='1' pattern='^[0-9]')


mixin checkboxInput(name)
    input(name=`attr_${attrName(name)}` type='checkbox')&attributes(attributes)

mixin checkboxSymbol(name, symbol)
    input.toggles.text-center(name=`attr_${attrName(name)}` title=`@{${attrName(name)}}` type='checkbox' value=name)
    span.toggles.text-center.pictos #{symbol}

mixin textareaLabeled(name)
    .area
        label=name
        +textarea(name)

mixin textarea(name)
    textarea(name=`attr_${attrName(name)}` placeholder=name)

mixin rollButtonDefault(name)
    button.text-capitalize(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:rolls} {{header=${name}}} {{dice=[[1d8]]}}`)

mixin rollButton(name)
    button.text-capitalize(name=`roll_${buttonName(name)}` type='roll' value!=`&{template:default} {{Attribut: ${name}}} {{Qualit√§t: [[[[@{${attrName(name)}}]] + [[1d8<@{${attrName(name)}}f8-1]]]] }} {{Wurf: $[[1]]}} }}`)=name

mixin actionButton(name)
    button.text-capitalize(name=`act_${buttonName(name)}` type='action')=name

mixin repeatingRollButton(name)
    button.text-left.ellipsis.font-weight-bold(name=`roll_${buttonName(name)}` type='roll' value!=``)
        span(name='attr_name')

mixin repeatingTextRollable(name)
    fieldset(class=`repeating_${buttonName(name)}`)
        .rowx.grid.descriptor
            +textInput(`name`)
            +textInput('description')
            +numberInput('quality')
            +repeatingRollButton(name)

mixin repeatingText(name)
    fieldset(class=`repeating_${buttonName(name)}`)
        .rowx.grid.descriptor
                +textInput(`name`,`font-weight: bold`)
                +textInput('description', `font-style: italic`)


mixin dropDownDefault(name, entrys=[])
    select(name=`attr_${attrName(name)}`)
        each entry in entrys
            option(value=entry)=entry 

mixin dropDown(name, entrys=[])
    select(name=`attr_${attrName(name)}`)
        each entry in entrys
            option(value=entry.value)=entry.name 

mixin createRollSet(name, list)
    each attr in list
        label(for=`roll_${attr}`)=attr
        input(name=`attr_roll_${attrName(attr)}` id=`roll_${attr}` type='number' value='0' min='0' max='99' step='1' pattern='^[0-9]')
    +actionButton(name)

mixin createTabDefault(name)
    +createTab(name, "defaultTab")
        block

mixin createTab(name, cat)
    input(name=`attr_${attrName(cat)}` id=name type='radio')
    label(for=name)= name
    .tab
        block

mixin abilitySelect(name)
    select(name=`attr_${attrName(name)}`)
        each group in raspa_abilities
            option(style="font-weight: bold; font-size: large;" disabled)=group.name
                each entry in group.group
                    option(value=entry.name)=entry.name 
